{
  "_args": [
    [
      {
        "raw": "eslint-plugin-unicorn@^2.1.0",
        "scope": null,
        "escapedName": "eslint-plugin-unicorn",
        "name": "eslint-plugin-unicorn",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/Users/pasqualevitiello/My Folder/Job/Projects/Gits/IO-framework/node_modules/xo"
    ]
  ],
  "_from": "eslint-plugin-unicorn@>=2.1.0 <3.0.0",
  "_id": "eslint-plugin-unicorn@2.1.1",
  "_inCache": true,
  "_location": "/eslint-plugin-unicorn",
  "_nodeVersion": "4.7.3",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/eslint-plugin-unicorn-2.1.1.tgz_1490472848283_0.9877220133785158"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-plugin-unicorn@^2.1.0",
    "scope": null,
    "escapedName": "eslint-plugin-unicorn",
    "name": "eslint-plugin-unicorn",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/xo"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-unicorn/-/eslint-plugin-unicorn-2.1.1.tgz",
  "_shasum": "3e9294366799b715e16a6df89159495b68930cb3",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-unicorn@^2.1.0",
  "_where": "/Users/pasqualevitiello/My Folder/Job/Projects/Gits/IO-framework/node_modules/xo",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/issues"
  },
  "dependencies": {
    "lodash.camelcase": "^4.1.1",
    "lodash.kebabcase": "^4.0.1",
    "lodash.snakecase": "^4.0.1",
    "lodash.upperfirst": "^4.2.0",
    "req-all": "^1.0.0"
  },
  "description": "Various awesome ESLint rules",
  "devDependencies": {
    "ava": "*",
    "coveralls": "^2.11.9",
    "eslint": "^3.5.0",
    "eslint-ava-rule-tester": "^2.0.0",
    "nyc": "^10.0.0",
    "pify": "^2.3.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "3e9294366799b715e16a6df89159495b68930cb3",
    "tarball": "https://registry.npmjs.org/eslint-plugin-unicorn/-/eslint-plugin-unicorn-2.1.1.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js",
    "rules"
  ],
  "gitHead": "be821e0ae14b8d7cbdd2b4f99122d909c5506187",
  "homepage": "https://github.com/sindresorhus/eslint-plugin-unicorn#readme",
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin",
    "unicorn",
    "linter",
    "lint",
    "style",
    "xo"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "James Talmage",
      "email": "james@talmage.io",
      "url": "github.com/jamestalmage"
    },
    {
      "name": "Jeroen Engels",
      "email": "jfm.engels@gmail.com",
      "url": "github.com/jfmengels"
    },
    {
      "name": "Sam Verschueren",
      "email": "sam.verschueren@gmail.com",
      "url": "github.com/SamVerschueren"
    }
  ],
  "name": "eslint-plugin-unicorn",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": ">=3.6"
  },
  "readme": "# eslint-plugin-unicorn [![Build Status](https://travis-ci.org/sindresorhus/eslint-plugin-unicorn.svg?branch=master)](https://travis-ci.org/sindresorhus/eslint-plugin-unicorn) [![Coverage Status](https://coveralls.io/repos/github/sindresorhus/eslint-plugin-unicorn/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/eslint-plugin-unicorn?branch=master)\n\n<img src=\"https://cloud.githubusercontent.com/assets/170270/18659176/1cc373d0-7f33-11e6-890f-0ba35362ee7e.jpg\" width=\"180\" align=\"right\">\n\n> Various awesome ESLint rules\n\nYou might want to check out [XO](https://github.com/sindresorhus/xo), which includes this plugin.\n\n\n## Install\n\n```\n$ npm install --save-dev eslint eslint-plugin-unicorn\n```\n\n\n## Usage\n\nConfigure it in `package.json`.\n\n```json\n{\n\t\"name\": \"my-awesome-project\",\n\t\"eslintConfig\": {\n\t\t\"env\": {\n\t\t\t\"es6\": true\n\t\t},\n\t\t\"parserOptions\": {\n\t\t\t\"ecmaVersion\": 2017,\n\t\t\t\"sourceType\": \"module\"\n\t\t},\n\t\t\"plugins\": [\n\t\t\t\"unicorn\"\n\t\t],\n\t\t\"rules\": {\n\t\t\t\"unicorn/catch-error-name\": [\"error\", {\"name\": \"err\"}],\n\t\t\t\"unicorn/explicit-length-check\": \"error\",\n\t\t\t\"unicorn/filename-case\": [\"error\", {\"case\": \"kebabCase\"}],\n\t\t\t\"unicorn/no-abusive-eslint-disable\": \"error\",\n\t\t\t\"unicorn/no-process-exit\": \"error\",\n\t\t\t\"unicorn/throw-new-error\": \"error\",\n\t\t\t\"unicorn/number-literal-case\": \"error\",\n\t\t\t\"unicorn/escape-case\": \"error\",\n\t\t\t\"unicorn/no-array-instanceof\": \"error\",\n\t\t\t\"unicorn/no-new-buffer\": \"error\",\n\t\t\t\"unicorn/no-hex-escape\": \"error\",\n\t\t\t\"unicorn/custom-error-definition\": \"error\",\n\t\t\t\"unicorn/prefer-starts-ends-with\": \"error\",\n\t\t\t\"unicorn/prefer-type-error\": \"error\"\n\t\t}\n\t}\n}\n```\n\n\n## Rules\n\n- [catch-error-name](docs/rules/catch-error-name.md) - Enforce a specific parameter name in catch clauses.\n- [explicit-length-check](docs/rules/explicit-length-check.md) - Enforce explicitly comparing the `length` property of a value.\n- [filename-case](docs/rules/filename-case.md) - Enforce a case style for filenames.\n- [no-abusive-eslint-disable](docs/rules/no-abusive-eslint-disable.md) - Enforce specifying rules to disable in `eslint-disable` comments.\n- [no-process-exit](docs/rules/no-process-exit.md) - Disallow `process.exit()`.\n- [throw-new-error](docs/rules/throw-new-error.md) - Require `new` when throwing an error. *(fixable)*\n- [number-literal-case](docs/rules/number-literal-case.md) - Enforce lowercase identifier and uppercase value for number literals. *(fixable)*\n- [escape-case](docs/rules/escape-case.md) - Require escape sequences to use uppercase values. *(fixable)*\n- [no-array-instanceof](docs/rules/no-array-instanceof.md) - Require `Array.isArray()` instead of `instanceof Array`. *(fixable)*\n- [no-new-buffer](docs/rules/no-new-buffer.md) - Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`. *(fixable)*\n- [no-hex-escape](docs/rules/no-hex-escape.md) - Enforce the use of unicode escapes instead of hexadecimal escapes. *(fixable)*\n- [custom-error-definition](docs/rules/custom-error-definition.md) - Enforce correct `Error` subclassing. *(fixable)*\n- [prefer-starts-ends-with](docs/rules/prefer-starts-ends-with.md) - Prefer `String#startsWith` & `String#endsWith` over more complex alternatives.\n- [prefer-type-error](docs/rules/prefer-type-error.md) - Enforce throwing `TypeError` in type checking conditions. *(fixable)*\n\n\n## Recommended config\n\nThis plugin exports a [`recommended` config](index.js) that enforces good practices.\n\nEnable it in your `package.json` with the `extends` option:\n\n```json\n{\n\t\"name\": \"my-awesome-project\",\n\t\"eslintConfig\": {\n\t\t\"plugins\": [\n\t\t\t\"unicorn\"\n\t\t],\n\t\t\"extends\": \"plugin:unicorn/recommended\"\n\t}\n}\n```\n\nSee the [ESLint docs](http://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending config files.\n\n**Note**: This config will also enable the correct [parser options](http://eslint.org/docs/user-guide/configuring#specifying-parser-options) and [environment](http://eslint.org/docs/user-guide/configuring#specifying-environments).\n\n\n## Created by\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [James Talmage](https://github.com/jamestalmage)\n- [Jeroen Engels](https://github.com/jfmengels)\n- [Sam Verschueren](https://github.com/SamVerschueren)\n- [Contributors…](../../graphs/contributors)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/eslint-plugin-unicorn.git"
  },
  "scripts": {
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "test": "xo && nyc ava"
  },
  "version": "2.1.1"
}
